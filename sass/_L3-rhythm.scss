$desired-body-font-size: 18px !default;
$body-line-height-factor: 1.5 !default;
$min-line-height-factor: 1.2 !default;
$hr-height: 1px !default;
$hr-color: currentColor;

@import "modules/converters";

$body-leading: round(font-size-px($desired-body-font-size)*$body-line-height-factor)/font-size-px(1)*1rem !default;
$vertical-rhythm-base: $body-leading;
$vertical-space-base: $vertical-rhythm-base;

@import "modules/flow-rhythm";

$font-sizes: flow-font-size(1, $body-line-height-factor),
flow-font-size(1, ($min-line-height-factor + $body-line-height-factor)/2),
flow-font-size(1, $min-line-height-factor),
flow-font-size(2, $body-line-height-factor),
flow-font-size(2, $min-line-height-factor),
flow-font-size(3, $min-line-height-factor) !default;

$line-heights: ();
@each $font-size in $font-sizes {
  $line-heights: append($line-heights, flow-line-height($font-size));
}

@import "L2-spacing";

/* Kingdom CSS Level 3 - Vertical Rhythm */

hr {
  // Fit thematic break into the vertical rhythm
  height: $hr-height; // Give the <hr> a fixed height to reset user agent styles
  margin-bottom: -$hr-height; // This negative margin pulls the succeeding element closer
  border: 0; // Remove user agent borders
  background-color: $hr-color;
}

.visualize-vertical-rhythm {
  // This doesn't work very well when $vertical-rhythm-base doesn't correspond to a whole pixel value
  $grid-color: rgba(red, 0.15);
  background-image: linear-gradient($grid-color, $grid-color 1px, transparent 1px);
  background-size: 1px $vertical-rhythm-base;
}
