/* Kingdom CSS Extension - Forms */
@import "../modules/colors";
@import "../modules/layout";
@import "../modules/sizing";
@import "../modules/fonts";
@import "../modules/shadows";


$input-border-color: change_color(get-color(body), $saturation: 5%, $lightness: 75%) !default;
$input-border-width: 1px !default;
$input-border-radius: $spacing-base/8 !default;
$input-border-style: solid !default;
$input-text-color: black !default;
$input-background: change_color(get-color(primary), $saturation: 10%, $lightness: 99%) !default;
$input-box-shadow: if(variable-exists(inner-shadow), $inner-shadow, inset shadow-relative(1/4) change_color(get-color(shadow), $alpha: .1)) !default;
$input-focus-box-shadow: 0 0 4px 2px #5E9ED6 !default; // Color from Mac
$input-focus-outline: -webkit-focus-ring-color auto 5px !default; // Set $input-focus-outline to literal none to use $input-focus-box-shadow on focus in all browsers

$button-color: get-color(primary) !default;
$button-text-color: get-text-color(primary) !default;
$button-border-color: $button-color !default;
$button-border-width: $input-border-width !default;
$button-border-radius: $input-border-radius !default;
$button-border-style: $input-border-style !default;
$button-background: transparent !default;
$button-box-shadow: generate-relative-shadow(1/3, get-color(shadow), get-color(body)) !default;
$button-active-box-shadow: inset shadow-relative(1/3) change_color(get-color(shadow), $alpha: .1) !default;
$button-focus-box-shadow: 0 0 0 .2rem change_color($button-color, $lightness: 80%) !default;
$button-focus-outline: none !default;
$button-transition: all .15s ease-in-out !default;
$button-horizontal-padding: $spacing-base/4 !default;
$button-text-decoration: none !default;

$button-destructive-color: get-color(caution) !default;
$button-destructive-text-color: get-text-color(caution) !default;
$button-destructive-focus-box-shadow: set_nth($button-focus-box-shadow, -1, change_color($button-destructive-color, $lightness: 80%)) !default;

/* %label-disabled */
%label-disabled {
  @include apply-text-color(disabled);
}

/* %input-disabled */
%input-disabled {
  @include apply-background-color(disabled);
  color: graytext;
}

/* %option-disabled */
%option-disabled {
  @include apply-text-color(disabled);
  color: graytext;
}

/* %button-disabled */
%button-disabled {
  pointer-events: none;

  @include apply-background-color(disabled);
  color: graytext;
  border-color: get-color(disabled); // For browsers that don't support transparent
  border-color: transparent;

  box-shadow: none;
}

/* %label-invalid */
%label-invalid {
  @include apply-color(caution);
}

/* %error-message */
%error-message {
  @include apply-color(caution);
  @extend %description;
}

/* %description */
%description {
  @extend %mt-0;
}

span, small {
  &%description {
    @include display-inline-block();
  }
}

// Input descriptions
[id*='description'],
[id*='Description'] {
  @extend %description;
}

/* Inputs */

select {
  vertical-align: bottom;

  &:disabled {
    optgroup, option {
      @extend %option-disabled;
    }
  }
}

optgroup, option {
  &:disabled {
    @extend %option-disabled;
  }
}

input:not([type='checkbox']):not([type='radio']), select:not([size]):not([multiple]) {
  @include border-preserving-line-height($spacing-base, $input-border-width);
}

textarea {
  @include border-for-auto-height($width: $input-border-width);
}

input, textarea, select {
  @extend %font-forms !optional;

  background: $input-background;
  color: $input-text-color;

  border-color: $input-border-color;
  border-style: $input-border-style;
  border-radius: $input-border-radius;

  &[aria-invalid] {
    @include apply-color(caution, border-color);
  }

  &:disabled {
    @extend %input-disabled;
  }
  &:focus {
    outline: none;
    box-shadow: $input-focus-box-shadow;

    @if($input-focus-outline != none) {
      @supports (outline: $input-focus-outline) {
        outline: $input-focus-outline;
        box-shadow: none;
      }
    }
  }
}

input, textarea {
  box-shadow: $input-box-shadow;

  &::placeholder {
    color: inherit;
    opacity: .5;
  }

  &:read-only {
    @include apply-background-color(disabled, $apply-text-color: false);
  }
}

[type='checkbox'], [type='radio'] {
  background: initial;
  box-shadow: initial;
  border: initial;

  @include baseline-align;

  &[id] {
    &:disabled {
      + label[for] {
        @extend %label-disabled;
      }
    }

    &[aria-invalid] {
      + label[for] {
        @extend %label-invalid;
      }
    }
  }
}

[type='radio'] {
  border-radius: 50%;
}

%input-width-full {
  width: 100%;
}

[type='text'], textarea:not([cols]) {
  @extend %input-width-full;
  max-width: $readable-line-length-max;
}

[type='email'], [type='tel'], [type='password'], [type='search'] {
  @extend %input-width-full;
  max-width: $readable-line-length-max/2;
}

/* Labels */
label {
  @extend %font-forms;
}

// Labels for disabled form controls
label.disabled,
label[disabled],
label:disabled,
fieldset:disabled label:not([for]) {
  @extend %label-disabled;
}

// Labels for invalid form controls
label.invalid,
label[aria-invalid] {
  @extend %label-invalid;
}

// Error messages
[id*='error'],
[id*='Error'] {
  @extend %error-message;
}

/* Buttons */

/* %button base for all buttons  */
%button {
  @extend %font-forms;

  color: $button-color;
  background: $button-background;

  display: inline-block;

  @include border-preserving-line-height($spacing-base, $button-border-width);
  border-color: $button-border-color;
  border-style: $button-border-style;
  border-radius: $button-border-radius;

  box-shadow: $button-box-shadow;

  padding-left: $button-horizontal-padding;
  padding-right: $button-horizontal-padding;

  text-decoration: $button-text-decoration;

  transition: $button-transition;

  &:focus {
    outline: $button-focus-outline;
    box-shadow: $button-focus-box-shadow;
  }

  &:active {
    color: $button-color; //Avoid clicked button "disappearing" when browser inverts text color on a transparent background
    box-shadow: $button-active-box-shadow;
  }

  &:disabled, &.disabled, fieldset:disabled & {
    @extend %button-disabled;
  }
}

button,
[type='button'],
[type='reset'],
[type='submit'] {
  @extend %button;
}

/* Prominent button */
.button-prime {
  @extend %button;
  color: $button-text-color;
  background-color: $button-color;
  border-color: $button-color;

  &:active {
    color: $button-text-color;
  }
}

/* Standard button */
.button-plain {
  @extend %button;
}

/* Big button */
.button-large {
  @extend %button;
  @include size-text(1em, 2*$spacing-base);
  @include border-preserving-line-height($spacing-base * 2, $button-border-width);
}

/* Cautionary button */
.button-destructive {
  @extend %button;
  color: $button-destructive-color;
  border-color: $button-destructive-color;

  &:focus {
    box-shadow: $button-destructive-focus-box-shadow;
  }

  &:active {
    color: $button-destructive-color;
    box-shadow: $button-active-box-shadow;
  }

  &.button-prime {
    background-color: $button-destructive-color;
    border-color: $button-destructive-color;
    color: $button-destructive-text-color;

    &:active {
      color: $button-destructive-text-color;
    }
  }
}

/* Discreet, link like button */
.button-petty {
  @extend %button;
  border-color: transparent;
  background-color: transparent;
  text-decoration: underline;
  box-shadow: none;

  &:focus {
    text-decoration: none;
  }

  &:active {
    box-shadow: none;
    text-decoration: none;
  }

  &:disabled {
    text-decoration: none;
  }
}

// Submit buttons in invalid forms
:invalid [type="submit"]:not([formnovalidate]) {
  opacity: .5;
}

/* Form layout */

label {
  // Labels go on their own line
  @include display-block();
}

* + label {
  // Add spacing before all labels
  @extend %mt-1;
}

fieldset > label:first-of-type {
  // Remove spacing before first label in a fieldset
  @extend %mt-0;
}

label:not([for]) {
  & + & {
    // Remove spacing between adjacent labels not referencing any input - i.e. presumed to contain their input, usually a checkbox or radiobutton
    @extend %mt-0;
  }
}

[type="checkbox"], [type="radio"] {
  &[id] {
    + label[for] {
      // Inline labels that come after their checkbox/radiobutton
      @include display-inline();
    }
  }
}

/* .form-inline make a form's contents go inline */
.form-inline {
  > label {
    @include display-inline();
  }

  > {
    textarea:not([cols]),
    input {
      width: auto;
    }
  }
}
