$border-width: 1px !default;
$border-style: solid !default;
$body-line-height-factor: 1.5 !default;

@import "../modules/strip-unit";
@import "../modules/element-types";
@import "../modules/colors";

// Register a border color if not already defined in $colors map
@include register-color(border, currentColor);

@mixin border-for-fixed-height($sides: top bottom left right, $width: $border-width) {
  @each $side in $sides {
    border-#{$side}-width: $width;
    --border-#{$side}-width: $width;
    border-#{$side}-width: var(--border-#{$side}-width);

    @if index($sides, top) {
      @if strip-unit($width) > 0 {
        vertical-align: bottom; //Get rid of space after a bordered inline-block}
      }
    }
  }
}

@mixin border-for-auto-height($sides: top bottom left right, $width: $border-width) {
  @include border-for-fixed-height($sides, $width);

  @if index($sides, top) {
    @if strip-unit($width) > 0 {
      position: relative;
      top: -$width;
      top: calc(0px - var(--border-top-width));
    } @else {
      position: initial;
      top: initial;
    }
  }

  @if index($sides, top) or index($sides, bottom) {
    margin-bottom: 0 - if(index($sides, top), $width, 0) - if(index($sides, bottom), $width, 0);
    margin-bottom: calc(0px - var(--border-top-width, 0px) - var(--border-bottom-width, 0px));
    &%height-multiple {
      //A fixed-height element should not compensate margin for next element (when box-sizing is border-box)
      margin-bottom: 0;
    }
  }

  @if index($sides, top) and strip-unit($width) > 0 {
    &%height-multiple {
      //A fixed-height element should not be shifted up
      position: initial;
      top: initial;
    }
  }
}

// Use this with one-line inline elements (e.g. form inputs) to match their height to surrounding text
@mixin border-preserving-line-height($line-height: $body-line-height-factor, $width: $border-width) {
  vertical-align: bottom;
  white-space: nowrap;
  line-height: font-size-rem($line-height) - length-rem(2 * $width);
  line-height: calc(var(--line-height, #{$line-height}) - #{2 * $width});
  border-width: $width;
  padding-top: 0;
  padding-bottom: 0;
  height: font-size-rem($line-height);
  height: var(--line-height, font-size-rem($line-height));
  max-height: font-size-rem($line-height);
  max-height: var(--line-height, font-size-rem($line-height));
}

// Set a default border style to allow just setting border-width when needed
// https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
@mixin border-reset($style: $border-style) {
  border: 0 $style;
  @include apply-color(border, border-color);
}
