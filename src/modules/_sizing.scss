$spacing-base: 1rem !default;
$readable-line-length: 75ch !default; //https://www.smashingmagazine.com/2014/09/balancing-line-length-font-size-responsive-web-design/#line-length-measure-and-reading

// Apply one or more length-properties relative to the spacing base
@mixin length-relative($properties, $factor: 1, $extend-height-multiple: false) {
  @each $property in $properties {
    #{$property}: $factor * $spacing-base;
    #{$property}: calc(#{$factor} * var(--spacing-base, #{$spacing-base}));
    @if ($extend-height-multiple and $property == height and round($factor) == $factor) {
      @extend %height-multiple !optional;
    }
  }
}

// Apply font size and line height, and put the line-height in a CSS custom property for use in other calculations
@mixin size-text($font-size, $line-height) {
  font-size: $font-size;
  line-height: $line-height;
  @if (type-of($line-height) == 'number' and $line-height != 0) {
    @if (unit($line-height) == unit($spacing-base)) {
      $factor: round($line-height/$spacing-base);
      --line-height: calc(#{$factor} * var(--spacing-base, #{$spacing-base}));
    } @else {
      --line-height: $line-height;
    }
    line-height: var(--line-height);
  }
}

@mixin max-width-readable($readable-line-length: $readable-line-length) {
  max-width: $readable-line-length;
}
