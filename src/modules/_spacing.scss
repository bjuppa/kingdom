$default-spacing-fraction: 1/3 !default;

@import "sizing";
@import "text-direction";

// Add marging, compensating with padding to a whole spacing base unit vertically
@mixin margin-relative($sides: top, $fraction: 1) {
  @each $side in $sides {
    @include length-relative(margin-#{$side}, $fraction);
  }

  @if(index($sides, top) and $fraction != round($fraction)) {
    $counter-fraction: ceil($fraction) - $fraction + floor($fraction);
    @include length-relative(padding-top, $counter-fraction);
    @include length-relative(padding-bottom, ceil($counter-fraction));
  }
}

// Add padding, totalling to a whole spacing base unit vertically
@mixin padding-relative($sides: top bottom left right, $fraction: 1) {
  $paddings: ();
  @each $side in $sides {
    $paddings: map-merge($paddings, ($side: $fraction));
  }

  @if($fraction != round($fraction)) {
    $counter-fraction: ceil($fraction) - $fraction + floor($fraction);
    @if(map-has-key($paddings, top)) {
      $paddings: map-merge($paddings, (bottom: $counter-fraction));
    } @else if(map-has-key($paddings, bottom)) {
      $paddings: map-merge($paddings, (top: $counter-fraction));
    }
  }

  @each $side, $fraction in $paddings {
    @include length-relative(padding-#{$side}, $fraction);
  }
}

// Add horizontal padding and make sure the last baseline-shifted element gets some bottom padding
@mixin space-inside($sides: top bottom left right, $fraction: $default-spacing-fraction) {
  //If the last child of a bordered element is baseline shifted, it's text lies on the bottom border - so add bottom padding!
  @if index($sides, bottom) {
    > %baseline-shift:last-child {
      @include padding-relative(bottom, 1);
    }
  }

  @if index($sides, left) {
    @include padding-relative(left, $fraction);
  }
  @if index($sides, right) {
    @include padding-relative(right, $fraction);
  }
}

// Add horizontal spacing between children
@mixin space-children-horizontally($fraction: $default-spacing-fraction) {
  @include for-ltr {
    > :not(:last-child) {
      @include length-relative(margin-right, $fraction);
      margin-left: 0;
    }
  }
  @include for-rtl {
    > :not(:last-child) {
      @include length-relative(margin-left, $fraction);
      margin-right: 0;
    }
  }
}
