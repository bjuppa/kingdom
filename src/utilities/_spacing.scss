// Utilities for spacing
@import "../modules/spacing";
@import "../modules/sizing";
@import "../modules/extenders";
@import "../modules/text-direction";

.my-0 {
  margin-top: 0;
  margin-bottom: 0;
}

$horizontal-margin-utilities: 1 2 3 4 6 !default;
@each $multiple in $horizontal-margin-utilities {
  .mx-#{$multiple} {
    @include length-relative(margin-left margin-right, $multiple);
  }

  .ml-#{$multiple} {
    @include length-relative(margin-left, $multiple);
  }

  .mr-#{$multiple} {
    @include length-relative(margin-right, $multiple);
  }

  @include extend-for-children(mx-#{$multiple} ml-#{$multiple} mr-#{$multiple});
  @include extend-for-adjacent-children(ml-#{$multiple} mr-#{$multiple});
}

.mt-0 {
  margin-top: 0;
}

$vertical-margin-utilities: 1 2 3 4 6 9 !default;
@each $multiple in $vertical-margin-utilities {
  .mt-#{$multiple} {
    @include length-relative(margin-top, $multiple);
  }
}

.mb-0 {
  margin-bottom: 0;
}

.m-auto {
  margin: auto;
}

.mx-auto, .mx-align-center {
  /* Horizontally center a block */
  margin-left: auto;
  margin-right: auto;
}

.ml-auto, .mx-align-right {
  /* Align a block to the right */
  margin-left: auto;
}

.mr-auto, .mx-align-left {
  /* Align a block to the left */
  margin-right: auto;
}

.mx-align-end {
  /* Horizontally push a block in the text direction */
  @include in-ltr-context {
    margin-left: auto;
    margin-right: 0;
  }
  @include in-rtl-context {
    margin-right: auto;
    margin-left: 0;
  }
}

.mx-align-start {
  /* Horizontally push a block opposite of the text direction */
  @include in-ltr-context {
    margin-right: auto;
    margin-left: 0;
  }
  @include in-rtl-context {
    margin-left: auto;
    margin-right: 0;
  }
}

.p-0 {
  padding: 0;
}

.px-0 {
  @include padding-relative(left right, 0);
}

.py-0 {
  @include padding-relative(top bottom, 0);
}

.pt-0 {
  @include padding-relative(top, 0);
}

.pb-0 {
  @include padding-relative(bottom, 0);
}

$padding-utilities: 1 2 3 4 !default;
@each $multiple in $padding-utilities {
  .p-#{$multiple} {
    @include length-relative(padding, $multiple);
  }

  .px-#{$multiple} {
    @include padding-relative(left right, $multiple);
  }

  .py-#{$multiple} {
    @include padding-relative(top bottom, $multiple);
  }

  .pt-#{$multiple} {
    @include padding-relative(top, $multiple);
  }

  .pb-#{$multiple} {
    @include padding-relative(bottom, $multiple);
  }
}

$fraction-spacing-utilities: (
  '1\\/2': 1/2,
  '1\\/3': 1/3,
  '1\\/4': 1/4,
  '2\\/3': 2/3,
  '3\\/4': 3/4,
) !default;
@each $suffix, $factor in $fraction-spacing-utilities {
  .mx-#{$suffix} {
    @include length-relative(margin-left margin-right, $factor);
  }

  .mt-#{$suffix} {
    @include length-relative(margin-top, $factor);
  }

  .ml-#{$suffix} {
    @include length-relative(margin-left, $factor);
  }

  .mr-#{$suffix} {
    @include length-relative(margin-right, $factor);
  }

  .px-#{$suffix} {
    @include padding-relative(left right, $factor);
  }

  .pt-#{$suffix} {
    @include padding-relative(top, $factor);
  }

  @include extend-for-children(mx-#{$suffix} ml-#{$suffix} mr-#{$suffix});
  @include extend-for-adjacent-children(ml-#{$suffix} mr-#{$suffix});
}


// Space inside - great for bordered elements

.space-inside-l {
  @include space-inside(left);
}

.space-inside-r {
  @include space-inside(right);
}

.space-inside-b {
  @include space-inside(bottom);
}

.space-inside {
  @include space-inside();
}

// Space children - great with minified html where inlined elements stack up against each other

.children\:space-horizontally {
  @include space-children-horizontally();
}

// Space gaps between columns and grid (and flex) items

@each $suffix, $factor in $fraction-spacing-utilities {
  .column-gap-#{$suffix} {
    @include length-relative(column-gap, $factor);
  }
}

$gap-utilities: 1 2 3 4 !default;
@each $multiple in $gap-utilities {
  .gap-#{$multiple} {
    @include length-relative(gap, $multiple);
  }

  .column-gap-#{$multiple} {
    @include length-relative(column-gap, $multiple);
  }

  .row-gap-#{$multiple} {
    @include length-relative(row-gap, $multiple);
  }
}

.gap-0 {
  gap: 0;
}

.column-gap-0 {
  column-gap: 0;
}

.row-gap-0 {
  row-gap: 0;
}

.column-gap-normal {
  column-gap: normal;
}

@include extend-for-children(mt-0 mt-1 space-inside mx-auto ml-auto mr-auto);
@include extend-for-adjacent-children(mt-1);
@include extend-for-descendants(mt-0);
