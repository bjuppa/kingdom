$spacing-base: 1em !default;
$desired-body-font-size: 18px !default;
$body-line-height-factor: 1.5 !default;
$min-line-height-factor: 1.2 !default;
$modular-scale: 1.2 !default;
$font-size-smaller: 100%/$modular-scale !default;

@import "modules/converters";

$font-sizes: font-size-rem($desired-body-font-size) !default;
@while (length($font-sizes) < 6) {
  $font-sizes: append($font-sizes, nth($font-sizes, length($font-sizes)) * $modular-scale);
}

$line-heights: $body-line-height-factor !default;
@while (length($line-heights) < 6) {
  $line-heights: append($line-heights, (length($line-heights) + 1) * ($min-line-height-factor - $body-line-height-factor) / 5 + (6 * $body-line-height-factor - $min-line-height-factor) / 5);
}

@import "L1-reset";

/* Kingdom CSS Level 2 - Sizing and Spacing */

// TODO: remove import and use placeholders instead
@import "modules/sizing";

:root {
  --spacing-base: $spacing-base;
}

.mt-1 {
  @include set-length(margin-top);
}

* {
  @extend %m-0;
}

* + * {
  // Set default vertical spacing between all adjacent block level elements
  @extend .mt-1;
}

//TODO: move mt-0 composits to spacing utilities
.mt-0-children > * {
  @extend %mt-0;
}

.mt-0-within * {
  @extend %mt-0;
}

.mt-0-after + * {
  @extend %mt-0;
}

dt, li, hgroup, h1, h2, h3, h4, h5, h6 {
  // Reset vertical spacing on adjacent siblings
  + * {
    @extend %mt-0;
  }
}

a, abbr, b, bdo, cite, code, dfn, em, i, kbd, q, samp, small, span, strong, sub, sup, time, var {
  // Reset vertical spacing on text-elements, should they become block level elements
  @extend %mt-0;
}

//TODO: is the input:not selector too specific?
textarea, select, input:not([type="button"]):not([type="reset"]):not([type="submit"]) {
  // Reset vertical spacing on non-button form elements, should they become block level elements
  @extend %mt-0;
}

figure, picture, object, select, table, audio, video, map {
  // Reset all vertical spacing deep inside
  * {
    @extend %mt-0;
  }
}

/* Utilities for text sizing */

@for $i from 1 through 6 {
  .text-#{$i} {
    @include set-text(nth($font-sizes, $i), nth($line-heights, $i));
  }
}

.text-small {
  font-size: font-size-em($font-size-smaller);
  display: inline;
  line-height: 0;
}

.text-small-block {
  font-size: font-size-em($font-size-smaller);
  display: block;
}

.text-x-small {
  $font-size-smaller: font-size-em($font-size-smaller);
  font-size: $font-size-smaller*strip-unit($font-size-smaller);
  display: inline;
  line-height: 0;
}

.text-x-small-block {
  $font-size-smaller: font-size-em($font-size-smaller);
  font-size: $font-size-smaller*strip-unit($font-size-smaller);
  display: block;
}

.text-body {
  @extend .text-1;
}

.text-inherit {
  @include set-text(inherit, inherit);
}

// Apply text properties to elements...

* {
  @extend .text-inherit;
}

body {
  @extend .text-body;
}

small {
  @extend .text-small;
}

sub, sup {
  @extend .text-x-small;
}

h1 {
  @extend .text-4;
}

h2 {
  @extend .text-3;
}

h3 {
  @extend .text-2;
}

h4 {
  @extend .text-1;
}

h5 {
  @extend .text-small-block;
}

h6 {
  @extend .text-x-small-block;
}
